{"ast":null,"code":"var _jsxFileName = \"D:\\\\CLI Test\\\\habit-tracker\\\\src\\\\components\\\\DataManagement.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataManagement = ({\n  habits,\n  categories,\n  setHabits\n}) => {\n  const exportHabitsToJson = () => {\n    const dataStr = JSON.stringify(habits, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = 'habits.json';\n    let linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n  const exportHabitsToCsv = () => {\n    if (habits.length === 0) {\n      alert(\"No habits to export.\");\n      return;\n    }\n    const headers = [\"id\", \"name\", \"description\", \"frequency\", \"isTimeBased\", \"targetDuration\", \"reminderTime\", \"category\", \"history\", \"notes\"];\n    const rows = habits.map(habit => {\n      return headers.map(header => {\n        if (header === \"history\" || header === \"notes\") {\n          return JSON.stringify(habit[header]);\n        } else if (header === \"category\") {\n          const category = categories.find(cat => cat.id === habit.category);\n          return category ? category.name : \"\";\n        } else {\n          return habit[header];\n        }\n      }).join(',');\n    });\n    const csvContent = \"data:text/csv;charset=utf-8,\" + headers.join(',') + \"\\n\" + rows.join('\\n');\n    const encodedUri = encodeURI(csvContent);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", \"habits.csv\");\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  const importHabitsFromJson = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        try {\n          const importedHabits = JSON.parse(e.target.result);\n          // Basic validation for imported habits structure\n          if (Array.isArray(importedHabits) && importedHabits.every(h => h.id && h.name && h.history)) {\n            setHabits(importedHabits);\n            alert(\"Habits imported successfully!\");\n          } else {\n            alert(\"Invalid JSON format for habits.\");\n          }\n        } catch (error) {\n          alert(\"Error parsing JSON file: \" + error.message);\n        }\n      };\n      reader.readAsText(file);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Data Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Export Habits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary me-2\",\n        onClick: exportHabitsToJson,\n        children: \"Export to JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: exportHabitsToCsv,\n        children: \"Export to CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mt-4\",\n        children: \"Import Habits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".json\",\n        onChange: importHabitsFromJson,\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-muted mt-2\",\n        children: \"Importing habits will overwrite existing habits.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_c = DataManagement;\nexport default DataManagement;\nvar _c;\n$RefreshReg$(_c, \"DataManagement\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DataManagement","habits","categories","setHabits","exportHabitsToJson","dataStr","JSON","stringify","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","document","createElement","setAttribute","click","exportHabitsToCsv","length","alert","headers","rows","map","habit","header","category","find","cat","id","name","join","csvContent","encodedUri","encodeURI","link","body","appendChild","removeChild","importHabitsFromJson","event","file","target","files","reader","FileReader","onload","e","importedHabits","parse","result","Array","isArray","every","h","history","error","message","readAsText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","accept","onChange","_c","$RefreshReg$"],"sources":["D:/CLI Test/habit-tracker/src/components/DataManagement.js"],"sourcesContent":["import React from 'react';\n\nconst DataManagement = ({ habits, categories, setHabits }) => {\n  const exportHabitsToJson = () => {\n    const dataStr = JSON.stringify(habits, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const exportFileDefaultName = 'habits.json';\n\n    let linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', exportFileDefaultName);\n    linkElement.click();\n  };\n\n  const exportHabitsToCsv = () => {\n    if (habits.length === 0) {\n      alert(\"No habits to export.\");\n      return;\n    }\n\n    const headers = [\"id\", \"name\", \"description\", \"frequency\", \"isTimeBased\", \"targetDuration\", \"reminderTime\", \"category\", \"history\", \"notes\"];\n    const rows = habits.map(habit => {\n      return headers.map(header => {\n        if (header === \"history\" || header === \"notes\") {\n          return JSON.stringify(habit[header]);\n        } else if (header === \"category\") {\n          const category = categories.find(cat => cat.id === habit.category);\n          return category ? category.name : \"\";\n        } else {\n          return habit[header];\n        }\n      }).join(',');\n    });\n\n    const csvContent = \"data:text/csv;charset=utf-8,\" + headers.join(',') + \"\\n\" + rows.join('\\n');\n    const encodedUri = encodeURI(csvContent);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", \"habits.csv\");\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const importHabitsFromJson = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        try {\n          const importedHabits = JSON.parse(e.target.result);\n          // Basic validation for imported habits structure\n          if (Array.isArray(importedHabits) && importedHabits.every(h => h.id && h.name && h.history)) {\n            setHabits(importedHabits);\n            alert(\"Habits imported successfully!\");\n          } else {\n            alert(\"Invalid JSON format for habits.\");\n          }\n        } catch (error) {\n          alert(\"Error parsing JSON file: \" + error.message);\n        }\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  return (\n    <div className=\"card mt-4\">\n      <div className=\"card-header\">\n        <h3>Data Management</h3>\n      </div>\n      <div className=\"card-body\">\n        <h4>Export Habits</h4>\n        <button className=\"btn btn-primary me-2\" onClick={exportHabitsToJson}>\n          Export to JSON\n        </button>\n        <button className=\"btn btn-primary\" onClick={exportHabitsToCsv}>\n          Export to CSV\n        </button>\n\n        <h4 className=\"mt-4\">Import Habits</h4>\n        <input type=\"file\" accept=\".json\" onChange={importHabitsFromJson} className=\"form-control\" />\n        <p className=\"text-muted mt-2\">Importing habits will overwrite existing habits.</p>\n      </div>\n    </div>\n  );\n};\n\nexport default DataManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}