{"ast":null,"code":"import React from'react';import ProgressReports from'./ProgressReports';import StreakHeatmap from'./StreakHeatmap';import Badges from'./Badges';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Analytics=_ref=>{let{habits,categories,earnedBadges=[]}=_ref;const calculateHabitSuccessRate=habit=>{if(!habit.history||habit.history.length===0){return 0;}const firstTrackedDate=new Date(habit.history[0].date);const today=new Date();const totalDays=Math.ceil((today-firstTrackedDate)/(1000*60*60*24))+1;const uniqueDates=new Set(habit.history.map(entry=>new Date(entry.date).toDateString()));const completedDays=uniqueDates.size;return completedDays/totalDays*100;};const calculateCategorySuccessRate=categoryName=>{const habitsInCategory=habits.filter(habit=>habit.category===categoryName);if(habitsInCategory.length===0){return 0;}const totalSuccessRate=habitsInCategory.reduce((sum,habit)=>sum+calculateHabitSuccessRate(habit),0);return totalSuccessRate/habitsInCategory.length;};return/*#__PURE__*/_jsxs(\"div\",{className:\"card shadow-sm mt-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header bg-primary text-white\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"mb-0\",children:\"Analytics & Visualization\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card h-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"card-title text-primary mb-3\",children:\"Habit Success Rates\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-group list-group-flush\",children:habits.map(habit=>/*#__PURE__*/_jsxs(\"li\",{className:\"list-group-item d-flex justify-content-between align-items-center\",children:[habit.name,/*#__PURE__*/_jsxs(\"span\",{className:\"badge bg-primary rounded-pill\",children:[calculateHabitSuccessRate(habit).toFixed(2),\"%\"]})]},habit.id))})]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card h-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"card-title text-primary mb-3\",children:\"Category Success Rates\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-group list-group-flush\",children:categories.map(category=>/*#__PURE__*/_jsxs(\"li\",{className:\"list-group-item d-flex justify-content-between align-items-center\",children:[category.name,/*#__PURE__*/_jsxs(\"span\",{className:\"badge bg-success rounded-pill\",children:[calculateCategorySuccessRate(category.name).toFixed(2),\"%\"]})]},category.id))})]})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-12 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"card-title text-primary mb-3\",children:\"Streak Heatmaps\"}),habits.map(habit=>/*#__PURE__*/_jsx(StreakHeatmap,{habit:habit},habit.id))]})})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-12 mb-4\",children:/*#__PURE__*/_jsx(ProgressReports,{habits:habits})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-12 mb-4\",children:/*#__PURE__*/_jsx(Badges,{earnedBadges:earnedBadges})})]})]})]});};export default Analytics;","map":{"version":3,"names":["React","ProgressReports","StreakHeatmap","Badges","jsx","_jsx","jsxs","_jsxs","Analytics","_ref","habits","categories","earnedBadges","calculateHabitSuccessRate","habit","history","length","firstTrackedDate","Date","date","today","totalDays","Math","ceil","uniqueDates","Set","map","entry","toDateString","completedDays","size","calculateCategorySuccessRate","categoryName","habitsInCategory","filter","category","totalSuccessRate","reduce","sum","className","children","name","toFixed","id"],"sources":["D:/Fully Updated Projects/CLI Test/habit-tracker/src/components/Analytics.js"],"sourcesContent":["\nimport React from 'react';\nimport ProgressReports from './ProgressReports';\nimport StreakHeatmap from './StreakHeatmap';\n\nimport Badges from './Badges';\n\nconst Analytics = ({ habits, categories, earnedBadges = [] }) => {\n  const calculateHabitSuccessRate = (habit) => {\n    if (!habit.history || habit.history.length === 0) {\n      return 0;\n    }\n\n    const firstTrackedDate = new Date(habit.history[0].date);\n    const today = new Date();\n    const totalDays = Math.ceil((today - firstTrackedDate) / (1000 * 60 * 60 * 24)) + 1;\n\n    const uniqueDates = new Set(habit.history.map(entry => new Date(entry.date).toDateString()));\n    const completedDays = uniqueDates.size;\n\n    return (completedDays / totalDays) * 100;\n  };\n\n  const calculateCategorySuccessRate = (categoryName) => {\n    const habitsInCategory = habits.filter(habit => habit.category === categoryName);\n    if (habitsInCategory.length === 0) {\n      return 0;\n    }\n\n    const totalSuccessRate = habitsInCategory.reduce((sum, habit) => sum + calculateHabitSuccessRate(habit), 0);\n    return totalSuccessRate / habitsInCategory.length;\n  };\n\n  return (\n    <div className=\"card shadow-sm mt-4\">\n      <div className=\"card-header bg-primary text-white\">\n        <h3 className=\"mb-0\">Analytics & Visualization</h3>\n      </div>\n      <div className=\"card-body\">\n        <div className=\"row\">\n          <div className=\"col-md-6 mb-4\">\n            <div className=\"card h-100\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title text-primary mb-3\">Habit Success Rates</h4>\n                <ul className=\"list-group list-group-flush\">\n                  {habits.map((habit) => (\n                    <li key={habit.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\n                      {habit.name}\n                      <span className=\"badge bg-primary rounded-pill\">\n                        {calculateHabitSuccessRate(habit).toFixed(2)}%\n                      </span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-md-6 mb-4\">\n            <div className=\"card h-100\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title text-primary mb-3\">Category Success Rates</h4>\n                <ul className=\"list-group list-group-flush\">\n                  {categories.map((category) => (\n                    <li key={category.id} className=\"list-group-item d-flex justify-content-between align-items-center\">\n                      {category.name}\n                      <span className=\"badge bg-success rounded-pill\">\n                        {calculateCategorySuccessRate(category.name).toFixed(2)}%\n                      </span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        \n\n          <div className=\"row\">\n          <div className=\"col-12 mb-4\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title text-primary mb-3\">Streak Heatmaps</h4>\n                {habits.map((habit) => (\n                  <StreakHeatmap key={habit.id} habit={habit} />\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-12 mb-4\">\n            <ProgressReports habits={habits} />\n          </div>\n          <div className=\"col-12 mb-4\">\n            <Badges earnedBadges={earnedBadges} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Analytics;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}