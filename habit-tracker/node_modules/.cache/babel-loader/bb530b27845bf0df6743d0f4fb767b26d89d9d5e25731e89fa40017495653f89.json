{"ast":null,"code":"import React,{useState,useMemo}from'react';import CalendarHeatmap from'react-calendar-heatmap';import'react-calendar-heatmap/dist/styles.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const StreakHeatmap=_ref=>{let{habits,categories}=_ref;const today=new Date();const[selectedCategory,setSelectedCategory]=useState('');const[selectedMonth,setSelectedMonth]=useState(today.getMonth());const[selectedYear,setSelectedYear]=useState(today.getFullYear());const months=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];const years=useMemo(()=>{const currentYear=new Date().getFullYear();const yearsArray=[];for(let i=currentYear-5;i<=currentYear+1;i++){// Show current year +/- 5 years\nyearsArray.push(i);}return yearsArray;},[]);const filteredHabits=useMemo(()=>{if(selectedCategory===''){return habits;}return habits.filter(habit=>habit.category===selectedCategory);},[habits,selectedCategory]);const getValuesForHeatmap=useMemo(()=>{const dailyCompletions={};filteredHabits.forEach(habit=>{habit.history.forEach(entry=>{const date=entry.date;// Assuming date is already YYYY-MM-DD string\nconst completions=entry.completions||0;const target=habit.targetCompletions||1;if(!dailyCompletions[date]){dailyCompletions[date]={completed:0,target:0};}dailyCompletions[date].completed+=completions;dailyCompletions[date].target+=target;});});const values=[];for(const dateString in dailyCompletions){const{completed,target}=dailyCompletions[dateString];const ratio=target>0?Math.min(completed/target,1):0;// Cap ratio at 1\nvalues.push({date:dateString,count:ratio// Store ratio as count\n});}return values;},[filteredHabits]);const firstDayOfMonth=new Date(selectedYear,selectedMonth,1);const lastDayOfMonth=new Date(selectedYear,selectedMonth+1,0);return/*#__PURE__*/_jsx(\"div\",{className:\"card shadow-sm mt-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-body\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"card-title text-primary mb-3\",children:\"Streak Heatmap\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"row mb-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsxs(\"select\",{className:\"form-select\",value:selectedCategory,onChange:e=>setSelectedCategory(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Categories\"}),categories.map(cat=>/*#__PURE__*/_jsx(\"option\",{value:cat.name,children:cat.name},cat.id))]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsx(\"select\",{className:\"form-select\",value:selectedMonth,onChange:e=>setSelectedMonth(parseInt(e.target.value)),children:months.map((month,index)=>/*#__PURE__*/_jsx(\"option\",{value:index,children:month},index))})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-4\",children:/*#__PURE__*/_jsx(\"select\",{className:\"form-select\",value:selectedYear,onChange:e=>setSelectedYear(parseInt(e.target.value)),children:years.map(year=>/*#__PURE__*/_jsx(\"option\",{value:year,children:year},year))})})]}),/*#__PURE__*/_jsx(\"div\",{style:{height:'900px'},children:/*#__PURE__*/_jsx(CalendarHeatmap,{startDate:firstDayOfMonth,endDate:lastDayOfMonth,values:getValuesForHeatmap,classForValue:value=>{if(!value||value.count===0){return'color-empty';}// Map ratio (0-1) to a color scale (e.g., 1 to 5)\nconst intensity=Math.ceil(value.count*5);// 1-5 scale\nreturn\"color-scale-\".concat(intensity);}})})]})});};export default StreakHeatmap;","map":{"version":3,"names":["React","useState","useMemo","CalendarHeatmap","jsx","_jsx","jsxs","_jsxs","StreakHeatmap","_ref","habits","categories","today","Date","selectedCategory","setSelectedCategory","selectedMonth","setSelectedMonth","getMonth","selectedYear","setSelectedYear","getFullYear","months","years","currentYear","yearsArray","i","push","filteredHabits","filter","habit","category","getValuesForHeatmap","dailyCompletions","forEach","history","entry","date","completions","target","targetCompletions","completed","values","dateString","ratio","Math","min","count","firstDayOfMonth","lastDayOfMonth","className","children","value","onChange","e","map","cat","name","id","parseInt","month","index","year","style","height","startDate","endDate","classForValue","intensity","ceil","concat"],"sources":["D:/Fully Updated Projects/CLI Test/habit-tracker/src/components/StreakHeatmap.js"],"sourcesContent":["\nimport React, { useState, useMemo } from 'react';\nimport CalendarHeatmap from 'react-calendar-heatmap';\nimport 'react-calendar-heatmap/dist/styles.css';\n\nconst StreakHeatmap = ({ habits, categories }) => {\n  const today = new Date();\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [selectedMonth, setSelectedMonth] = useState(today.getMonth());\n  const [selectedYear, setSelectedYear] = useState(today.getFullYear());\n\n  const months = [\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n\n  const years = useMemo(() => {\n    const currentYear = new Date().getFullYear();\n    const yearsArray = [];\n    for (let i = currentYear - 5; i <= currentYear + 1; i++) { // Show current year +/- 5 years\n      yearsArray.push(i);\n    }\n    return yearsArray;\n  }, []);\n\n  const filteredHabits = useMemo(() => {\n    if (selectedCategory === '') {\n      return habits;\n    }\n    return habits.filter(habit => habit.category === selectedCategory);\n  }, [habits, selectedCategory]);\n\n  const getValuesForHeatmap = useMemo(() => {\n    const dailyCompletions = {};\n\n    filteredHabits.forEach(habit => {\n      habit.history.forEach(entry => {\n        const date = entry.date; // Assuming date is already YYYY-MM-DD string\n        const completions = entry.completions || 0;\n        const target = habit.targetCompletions || 1;\n\n        if (!dailyCompletions[date]) {\n          dailyCompletions[date] = { completed: 0, target: 0 };\n        }\n        dailyCompletions[date].completed += completions;\n        dailyCompletions[date].target += target;\n      });\n    });\n\n    const values = [];\n    for (const dateString in dailyCompletions) {\n      const { completed, target } = dailyCompletions[dateString];\n      const ratio = target > 0 ? Math.min(completed / target, 1) : 0; // Cap ratio at 1\n      values.push({\n        date: dateString,\n        count: ratio, // Store ratio as count\n      });\n    }\n    return values;\n  }, [filteredHabits]);\n\n  const firstDayOfMonth = new Date(selectedYear, selectedMonth, 1);\n  const lastDayOfMonth = new Date(selectedYear, selectedMonth + 1, 0);\n\n  return (\n    <div className=\"card shadow-sm mt-4\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title text-primary mb-3\">Streak Heatmap</h5>\n        <div className=\"row mb-3\">\n          <div className=\"col-md-4\">\n            <select\n              className=\"form-select\"\n              value={selectedCategory}\n              onChange={(e) => setSelectedCategory(e.target.value)}\n            >\n              <option value=\"\">All Categories</option>\n              {categories.map(cat => (\n                <option key={cat.id} value={cat.name}>{cat.name}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"col-md-4\">\n            <select\n              className=\"form-select\"\n              value={selectedMonth}\n              onChange={(e) => setSelectedMonth(parseInt(e.target.value))}\n            >\n              {months.map((month, index) => (\n                <option key={index} value={index}>{month}</option>\n              ))}\n            </select>\n          </div>\n          <div className=\"col-md-4\">\n            <select\n              className=\"form-select\"\n              value={selectedYear}\n              onChange={(e) => setSelectedYear(parseInt(e.target.value))}\n            >\n              {years.map(year => (\n                <option key={year} value={year}>{year}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n        <div style={{ height: '900px' }}>\n          <CalendarHeatmap\n            startDate={firstDayOfMonth}\n            endDate={lastDayOfMonth}\n            values={getValuesForHeatmap}\n            classForValue={(value) => {\n              if (!value || value.count === 0) {\n                return 'color-empty';\n              }\n              // Map ratio (0-1) to a color scale (e.g., 1 to 5)\n              const intensity = Math.ceil(value.count * 5); // 1-5 scale\n              return `color-scale-${intensity}`;\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StreakHeatmap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}