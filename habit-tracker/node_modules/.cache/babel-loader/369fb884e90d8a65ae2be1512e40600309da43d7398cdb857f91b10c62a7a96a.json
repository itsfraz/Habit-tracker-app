{"ast":null,"code":"var _jsxFileName = \"D:\\\\CLI Test\\\\habit-tracker\\\\src\\\\components\\\\HabitCalendar.js\";\nimport React from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HabitCalendar = ({\n  habit\n}) => {\n  const tileClassName = ({\n    date,\n    view\n  }) => {\n    if (view === 'month') {\n      const formattedDate = new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime();\n      const historyDates = habit.history.map(h => {\n        const d = new Date(h);\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate()).getTime();\n      });\n      if (historyDates.includes(formattedDate)) {\n        return 'bg-success text-white';\n      }\n    }\n    return '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-3\",\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      tileClassName: tileClassName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = HabitCalendar;\nexport default HabitCalendar;\nvar _c;\n$RefreshReg$(_c, \"HabitCalendar\");","map":{"version":3,"names":["React","Calendar","jsxDEV","_jsxDEV","HabitCalendar","habit","tileClassName","date","view","formattedDate","Date","getFullYear","getMonth","getDate","getTime","historyDates","history","map","h","d","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/CLI Test/habit-tracker/src/components/HabitCalendar.js"],"sourcesContent":["\nimport React from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nconst HabitCalendar = ({ habit }) => {\n  const tileClassName = ({ date, view }) => {\n    if (view === 'month') {\n      const formattedDate = new Date(\n        date.getFullYear(),\n        date.getMonth(),\n        date.getDate()\n      ).getTime();\n      const historyDates = habit.history.map((h) => {\n        const d = new Date(h);\n        return new Date(\n          d.getFullYear(),\n          d.getMonth(),\n          d.getDate()\n        ).getTime();\n      });\n\n      if (historyDates.includes(formattedDate)) {\n        return 'bg-success text-white';\n      }\n    }\n    return '';\n  };\n\n  return (\n    <div className=\"mt-3\">\n      <Calendar tileClassName={tileClassName} />\n    </div>\n  );\n};\n\nexport default HabitCalendar;\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EACnC,MAAMC,aAAa,GAAGA,CAAC;IAAEC,IAAI;IAAEC;EAAK,CAAC,KAAK;IACxC,IAAIA,IAAI,KAAK,OAAO,EAAE;MACpB,MAAMC,aAAa,GAAG,IAAIC,IAAI,CAC5BH,IAAI,CAACI,WAAW,CAAC,CAAC,EAClBJ,IAAI,CAACK,QAAQ,CAAC,CAAC,EACfL,IAAI,CAACM,OAAO,CAAC,CACf,CAAC,CAACC,OAAO,CAAC,CAAC;MACX,MAAMC,YAAY,GAAGV,KAAK,CAACW,OAAO,CAACC,GAAG,CAAEC,CAAC,IAAK;QAC5C,MAAMC,CAAC,GAAG,IAAIT,IAAI,CAACQ,CAAC,CAAC;QACrB,OAAO,IAAIR,IAAI,CACbS,CAAC,CAACR,WAAW,CAAC,CAAC,EACfQ,CAAC,CAACP,QAAQ,CAAC,CAAC,EACZO,CAAC,CAACN,OAAO,CAAC,CACZ,CAAC,CAACC,OAAO,CAAC,CAAC;MACb,CAAC,CAAC;MAEF,IAAIC,YAAY,CAACK,QAAQ,CAACX,aAAa,CAAC,EAAE;QACxC,OAAO,uBAAuB;MAChC;IACF;IACA,OAAO,EAAE;EACX,CAAC;EAED,oBACEN,OAAA;IAAKkB,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBnB,OAAA,CAACF,QAAQ;MAACK,aAAa,EAAEA;IAAc;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAACC,EAAA,GA7BIvB,aAAa;AA+BnB,eAAeA,aAAa;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}