{"ast":null,"code":"var _jsxFileName = \"D:\\\\Fully Updated Projects\\\\CLI Test\\\\habit-tracker\\\\src\\\\components\\\\ProgressReports.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressReports = ({\n  habits\n}) => {\n  const getMonthlyReport = () => {\n    const monthlyData = {};\n    habits.forEach(habit => {\n      habit.history.forEach(entry => {\n        const date = new Date(entry.date);\n        const yearMonth = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}`;\n        if (!monthlyData[yearMonth]) {\n          monthlyData[yearMonth] = {};\n        }\n        if (!monthlyData[yearMonth][habit.name]) {\n          monthlyData[yearMonth][habit.name] = 0;\n        }\n        monthlyData[yearMonth][habit.name]++;\n      });\n    });\n    return monthlyData;\n  };\n  const getYearlyReport = () => {\n    const yearlyData = {};\n    habits.forEach(habit => {\n      habit.history.forEach(entry => {\n        const date = new Date(entry.date);\n        const year = date.getFullYear().toString();\n        if (!yearlyData[year]) {\n          yearlyData[year] = {};\n        }\n        if (!yearlyData[year][habit.name]) {\n          yearlyData[year][habit.name] = 0;\n        }\n        yearlyData[year][habit.name]++;\n      });\n    });\n    return yearlyData;\n  };\n  const monthlyReport = getMonthlyReport();\n  const yearlyReport = getYearlyReport();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Monthly Progress Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), Object.keys(monthlyReport).sort().map(month => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: month\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group list-group-flush\",\n        children: Object.keys(monthlyReport[month]).map(habitName => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item d-flex justify-content-between align-items-center\",\n          children: [habitName, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge bg-info rounded-pill\",\n            children: [monthlyReport[month][habitName], \" completions\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)]\n        }, habitName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, month, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"mt-4\",\n      children: \"Yearly Progress Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), Object.keys(yearlyReport).sort().map(year => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group list-group-flush\",\n        children: Object.keys(yearlyReport[year]).map(habitName => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item d-flex justify-content-between align-items-center\",\n          children: [habitName, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge bg-info rounded-pill\",\n            children: [yearlyReport[year][habitName], \" completions\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, habitName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, year, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c = ProgressReports;\nexport default ProgressReports;\nvar _c;\n$RefreshReg$(_c, \"ProgressReports\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProgressReports","habits","getMonthlyReport","monthlyData","forEach","habit","history","entry","date","Date","yearMonth","getFullYear","getMonth","toString","padStart","name","getYearlyReport","yearlyData","year","monthlyReport","yearlyReport","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","sort","map","month","habitName","_c","$RefreshReg$"],"sources":["D:/Fully Updated Projects/CLI Test/habit-tracker/src/components/ProgressReports.js"],"sourcesContent":["\nimport React from 'react';\n\nconst ProgressReports = ({ habits }) => {\n  const getMonthlyReport = () => {\n    const monthlyData = {};\n    habits.forEach(habit => {\n      habit.history.forEach(entry => {\n        const date = new Date(entry.date);\n        const yearMonth = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}`;\n        if (!monthlyData[yearMonth]) {\n          monthlyData[yearMonth] = {};\n        }\n        if (!monthlyData[yearMonth][habit.name]) {\n          monthlyData[yearMonth][habit.name] = 0;\n        }\n        monthlyData[yearMonth][habit.name]++;\n      });\n    });\n    return monthlyData;\n  };\n\n  const getYearlyReport = () => {\n    const yearlyData = {};\n    habits.forEach(habit => {\n      habit.history.forEach(entry => {\n        const date = new Date(entry.date);\n        const year = date.getFullYear().toString();\n        if (!yearlyData[year]) {\n          yearlyData[year] = {};\n        }\n        if (!yearlyData[year][habit.name]) {\n          yearlyData[year][habit.name] = 0;\n        }\n        yearlyData[year][habit.name]++;\n      });\n    });\n    return yearlyData;\n  };\n\n  const monthlyReport = getMonthlyReport();\n  const yearlyReport = getYearlyReport();\n\n  return (\n    <div className=\"mt-5\">\n      <h3>Monthly Progress Reports</h3>\n      {Object.keys(monthlyReport).sort().map(month => (\n        <div key={month} className=\"card mb-3\">\n          <div className=\"card-header\">{month}</div>\n          <ul className=\"list-group list-group-flush\">\n            {Object.keys(monthlyReport[month]).map(habitName => (\n              <li key={habitName} className=\"list-group-item d-flex justify-content-between align-items-center\">\n                {habitName}\n                <span className=\"badge bg-info rounded-pill\">{monthlyReport[month][habitName]} completions</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ))}\n\n      <h3 className=\"mt-4\">Yearly Progress Reports</h3>\n      {Object.keys(yearlyReport).sort().map(year => (\n        <div key={year} className=\"card mb-3\">\n          <div className=\"card-header\">{year}</div>\n          <ul className=\"list-group list-group-flush\">\n            {Object.keys(yearlyReport[year]).map(habitName => (\n              <li key={habitName} className=\"list-group-item d-flex justify-content-between align-items-center\">\n                {habitName}\n                <span className=\"badge bg-info rounded-pill\">{yearlyReport[year][habitName]} completions</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ProgressReports;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}