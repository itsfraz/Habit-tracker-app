{"ast":null,"code":"import _objectSpread from\"D:/Fully Updated Projects/CLI Test/habit-tracker/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef,useCallback}from'react';import{Routes,Route,Navigate,useNavigate}from'react-router-dom';import'bootstrap/dist/css/bootstrap.min.css';import'bootstrap-icons/font/bootstrap-icons.css';import HabitList from'./components/HabitList';import AddHabitForm from'./components/AddHabitForm';import Analytics from'./components/Analytics';import Dashboard from'./components/Dashboard';import MotivationalQuote from'./components/MotivationalQuote';import LevelDisplay from'./components/LevelDisplay';import ShareProgress from'./components/ShareProgress';import HabitSuggestions from'./components/HabitSuggestions';import DataManagement from'./components/DataManagement';import Login from'./components/Login';import Register from'./components/Register';import Navbar from'./components/Navbar';import HomePage from'./components/HomePage';import authService from'./services/authService';import habitService from'./services/habitService';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PrivateRoute=_ref=>{let{children}=_ref;const user=authService.getCurrentUser();return user?children:/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});};const App=()=>{const navigate=useNavigate();const[habits,setHabits]=useState([]);const[categories]=useState([{id:1,name:'Health',color:'#28a745'},// Green\n{id:2,name:'Work',color:'#007bff'},// Blue\n{id:3,name:'Personal',color:'#ffc107'},// Yellow\n{id:4,name:'Skill Development',color:'#fd7e14'},// Orange\n{id:5,name:'Uncategorized',color:'#6c757d'}// Gray\n]);const[theme,setTheme]=useState('light');const[activeTab,setActiveTab]=useState('habits');const[layout,setLayout]=useState('default');const[isLayoutDropdownOpen,setIsLayoutDropdownOpen]=useState(false);const layoutDropdownRef=useRef(null);const[level,setLevel]=useState(1);const[xp,setXp]=useState(0);const[customSuggestedHabits,setCustomSuggestedHabits]=useState([]);const XP_PER_LEVEL=100;const[currentUser,setCurrentUser]=useState(undefined);useEffect(()=>{const user=authService.getCurrentUser();if(user){setCurrentUser(user);habitService.getHabits().then(res=>{const habitsWithParsedDates=res.data.map(habit=>_objectSpread(_objectSpread({},habit),{},{history:habit.history.map(entry=>_objectSpread(_objectSpread({},entry),{},{date:new Date(entry.date)}))}));setHabits(habitsWithParsedDates);});}},[]);const allBadges=[{id:1,name:'First Step',description:'Track your first habit',icon:'bi bi-award-fill',condition:habits=>habits.some(habit=>habit.history.length>0)},{id:2,name:'Consistent Beginner',description:'Track a habit for 7 consecutive days',icon:'bi bi-star-fill',condition:habits=>habits.some(habit=>{if(habit.history.length<7)return false;let streak=0;let lastDate=null;for(let i=habit.history.length-1;i>=0;i--){const currentDate=new Date(habit.history[i].date);currentDate.setHours(0,0,0,0);if(lastDate&&(lastDate.getTime()-currentDate.getTime())/(1000*60*60*24)===1){streak++;}else if(!lastDate||(lastDate.getTime()-currentDate.getTime())/(1000*60*60*24)>1){streak=1;}lastDate=currentDate;if(streak>=7)return true;}return false;})},{id:3,name:'Habit Master',description:'Track 5 different habits',icon:'bi bi-trophy-fill',condition:habits=>habits.filter(habit=>habit.history.length>0).length>=5}];const calculateEarnedBadges=habits=>{return allBadges.filter(badge=>badge.condition(habits));};const setReminder=useCallback((id,time)=>{const habitToUpdate=habits.find(h=>h._id===id);if(habitToUpdate){habitService.updateHabit(id,_objectSpread(_objectSpread({},habitToUpdate),{},{reminderTime:time})).then(res=>{setHabits(prevHabits=>prevHabits.map(habit=>habit._id===id?_objectSpread(_objectSpread({},habit),{},{reminderTime:time}):habit));});}},[habits]);useEffect(()=>{const storedTheme=localStorage.getItem('theme');if(storedTheme){setTheme(storedTheme);}const storedLevel=parseInt(localStorage.getItem('level'))||1;const storedXp=parseInt(localStorage.getItem('xp'))||0;setLevel(storedLevel);setXp(storedXp);const storedCustomSuggestions=JSON.parse(localStorage.getItem('customSuggestedHabits'));if(storedCustomSuggestions){setCustomSuggestedHabits(storedCustomSuggestions);}if(!('Notification'in window)){console.log(\"This browser does not support desktop notification\");}else if(Notification.permission===\"default\"){Notification.requestPermission();}const handleClickOutside=event=>{if(layoutDropdownRef.current&&!layoutDropdownRef.current.contains(event.target)){setIsLayoutDropdownOpen(false);}};document.addEventListener('mousedown',handleClickOutside);return()=>{document.removeEventListener('mousedown',handleClickOutside);};},[]);useEffect(()=>{localStorage.setItem('theme',theme);localStorage.setItem('level',level);localStorage.setItem('xp',xp);localStorage.setItem('customSuggestedHabits',JSON.stringify(customSuggestedHabits));document.body.className=theme==='dark'?'bg-dark text-white':'';// Clear existing reminders\nhabits.forEach(habit=>{if(habit.reminderTimeoutId){clearTimeout(habit.reminderTimeoutId);}});// Schedule new reminders\nhabits.forEach(habit=>{if(habit.reminderTime){const[hours,minutes]=habit.reminderTime.split(':').map(Number);const now=new Date();const reminderDate=new Date();reminderDate.setHours(hours,minutes,0,0);if(reminderDate.getTime()<now.getTime()){reminderDate.setDate(reminderDate.getDate()+1);}const delay=reminderDate.getTime()-now.getTime();if(delay>0){const timeoutId=setTimeout(()=>{if(Notification.permission===\"granted\"){const notification=new Notification('Habit Reminder',{body:\"Time to \".concat(habit.name,\"!\"),icon:'/logo192.png',data:{habitId:habit._id,reminderTime:habit.reminderTime}});notification.onclick=()=>{window.focus();};notification.onclose=event=>{if(event.isTrusted){const snoozedTime=new Date(now.getTime()+10*60*1000);const snoozedHours=snoozedTime.getHours().toString().padStart(2,'0');const snoozedMinutes=snoozedTime.getMinutes().toString().padStart(2,'0');setReminder(habit._id,\"\".concat(snoozedHours,\":\").concat(snoozedMinutes));}};}},delay);setHabits(prevHabits=>prevHabits.map(h=>h._id===habit._id?_objectSpread(_objectSpread({},h),{},{reminderTimeoutId:timeoutId}):h));}}});},[habits,theme,level,xp,customSuggestedHabits,setReminder]);const addHabit=habit=>{habitService.addHabit(habit).then(res=>{setHabits([...habits,res.data]);});};const deleteHabit=id=>{habitService.deleteHabit(id).then(()=>{setHabits(habits.filter(habit=>habit._id!==id));});};const trackHabit=id=>{const today=new Date().toISOString().slice(0,10);const habitsCopy=JSON.parse(JSON.stringify(habits));const habitToUpdate=habitsCopy.find(h=>h._id===id);if(habitToUpdate){const historyEntry=habitToUpdate.history.find(entry=>entry.date===today);if(historyEntry){historyEntry.completions+=1;}else{habitToUpdate.history.push({date:today,completions:1});}setHabits(habitsCopy);habitService.completeHabit(id).then(res=>{// The backend has been updated. We can optionally update the state again\n// with the response from the server, but the optimistic update should suffice.\nsetXp(prevXp=>{const newXp=prevXp+10;if(newXp>=XP_PER_LEVEL){setLevel(prevLevel=>prevLevel+1);return newXp-XP_PER_LEVEL;}return newXp;});}).catch(err=>{// If the API call fails, revert the changes\nconsole.error(\"Failed to update habit\",err);setHabits(habits);});}};const addNote=(id,note)=>{const habitToUpdate=habits.find(h=>h._id===id);if(habitToUpdate){const updatedNotes=[...habitToUpdate.notes,{id:Date.now(),text:note}];habitService.updateHabit(id,_objectSpread(_objectSpread({},habitToUpdate),{},{notes:updatedNotes})).then(res=>{setHabits(habits.map(habit=>habit._id===id?_objectSpread(_objectSpread({},habit),{},{notes:updatedNotes}):habit));});}};const toggleTheme=()=>{setTheme(theme==='light'?'dark':'light');};const addCustomSuggestedHabit=habitName=>{if(habitName.trim()!==''){setCustomSuggestedHabits(prev=>[...prev,{name:habitName.trim(),category:'Uncategorized',frequency:'daily'}]);}};const removeCustomSuggestedHabit=index=>{setCustomSuggestedHabits(prev=>prev.filter((_,i)=>i!==index));};const logOut=()=>{authService.logout();setCurrentUser(undefined);setHabits([]);navigate('/');};return/*#__PURE__*/_jsxs(\"div\",{className:\"container-fluid py-4 \".concat(theme==='dark'?'bg-dark text-white':'bg-light text-dark'),children:[/*#__PURE__*/_jsx(Navbar,{currentUser:currentUser,logOut:logOut}),/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-end align-items-center mb-4 px-3\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline-secondary\",onClick:toggleTheme,children:/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-\".concat(theme==='light'?'moon':'sun')})})}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(HomePage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/login\",element:/*#__PURE__*/_jsx(Login,{setCurrentUser:setCurrentUser})}),/*#__PURE__*/_jsx(Route,{path:\"/register\",element:/*#__PURE__*/_jsx(Register,{})}),/*#__PURE__*/_jsx(Route,{path:\"/tracker\",element:/*#__PURE__*/_jsxs(PrivateRoute,{children:[/*#__PURE__*/_jsx(MotivationalQuote,{}),/*#__PURE__*/_jsxs(\"ul\",{className:\"nav nav-pills nav-fill mb-4\",children:[/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"button\",{className:\"nav-link \".concat(activeTab==='habits'?'active':''),onClick:()=>setActiveTab('habits'),children:\"Habits\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"button\",{className:\"nav-link \".concat(activeTab==='analytics'?'active':''),onClick:()=>setActiveTab('analytics'),children:\"Analytics\"})}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"button\",{className:\"nav-link \".concat(activeTab==='dashboard'?'active':''),onClick:()=>setActiveTab('dashboard'),children:\"Dashboard\"})}),/*#__PURE__*/_jsxs(\"li\",{className:\"nav-item dropdown\",ref:layoutDropdownRef,children:[/*#__PURE__*/_jsx(\"button\",{className:\"nav-link dropdown-toggle\",onClick:()=>setIsLayoutDropdownOpen(!isLayoutDropdownOpen),\"aria-expanded\":isLayoutDropdownOpen,children:\"Layout\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"dropdown-menu \".concat(isLayoutDropdownOpen?'show':''),children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"dropdown-item\",onClick:()=>{setLayout('default');setIsLayoutDropdownOpen(false);},children:\"Default\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"dropdown-item\",onClick:()=>{setLayout('analytics-first');setIsLayoutDropdownOpen(false);},children:\"Analytics First\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"dropdown-item\",onClick:()=>{setLayout('full-width-habits');setIsLayoutDropdownOpen(false);},children:\"Full Width Habits\"})})]})]}),/*#__PURE__*/_jsx(\"li\",{className:\"nav-item\",children:/*#__PURE__*/_jsx(\"button\",{className:\"nav-link \".concat(activeTab==='data'?'active':''),onClick:()=>setActiveTab('data'),children:\"Data\"})})]}),activeTab==='habits'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(AddHabitForm,{addHabit:addHabit,categories:categories,customSuggestedHabits:customSuggestedHabits}),/*#__PURE__*/_jsx(HabitSuggestions,{habits:habits,addHabit:addHabit,categories:categories,customSuggestedHabits:customSuggestedHabits}),/*#__PURE__*/_jsx(HabitList,{habits:habits,deleteHabit:deleteHabit,trackHabit:trackHabit,addNote:addNote,categories:categories,setReminder:setReminder})]}),activeTab==='analytics'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Analytics,{habits:habits,categories:categories,earnedBadges:calculateEarnedBadges(habits)}),/*#__PURE__*/_jsx(LevelDisplay,{level:level,xp:xp,XP_PER_LEVEL:XP_PER_LEVEL}),/*#__PURE__*/_jsx(ShareProgress,{habits:habits,level:level})]}),activeTab==='dashboard'&&/*#__PURE__*/_jsx(Dashboard,{habits:habits,categories:categories,deleteHabit:deleteHabit,trackHabit:trackHabit,addNote:addNote,layout:layout}),activeTab==='data'&&/*#__PURE__*/_jsx(DataManagement,{habits:habits,categories:categories,setHabits:setHabits,customSuggestedHabits:customSuggestedHabits,addCustomSuggestedHabit:addCustomSuggestedHabit,removeCustomSuggestedHabit:removeCustomSuggestedHabit})]})})]})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Routes","Route","Navigate","useNavigate","HabitList","AddHabitForm","Analytics","Dashboard","MotivationalQuote","LevelDisplay","ShareProgress","HabitSuggestions","DataManagement","Login","Register","Navbar","HomePage","authService","habitService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PrivateRoute","_ref","children","user","getCurrentUser","to","App","navigate","habits","setHabits","categories","id","name","color","theme","setTheme","activeTab","setActiveTab","layout","setLayout","isLayoutDropdownOpen","setIsLayoutDropdownOpen","layoutDropdownRef","level","setLevel","xp","setXp","customSuggestedHabits","setCustomSuggestedHabits","XP_PER_LEVEL","currentUser","setCurrentUser","undefined","getHabits","then","res","habitsWithParsedDates","data","map","habit","_objectSpread","history","entry","date","Date","allBadges","description","icon","condition","some","length","streak","lastDate","i","currentDate","setHours","getTime","filter","calculateEarnedBadges","badge","setReminder","time","habitToUpdate","find","h","_id","updateHabit","reminderTime","prevHabits","storedTheme","localStorage","getItem","storedLevel","parseInt","storedXp","storedCustomSuggestions","JSON","parse","window","console","log","Notification","permission","requestPermission","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","setItem","stringify","body","className","forEach","reminderTimeoutId","clearTimeout","hours","minutes","split","Number","now","reminderDate","setDate","getDate","delay","timeoutId","setTimeout","notification","concat","habitId","onclick","focus","onclose","isTrusted","snoozedTime","snoozedHours","getHours","toString","padStart","snoozedMinutes","getMinutes","addHabit","deleteHabit","trackHabit","today","toISOString","slice","habitsCopy","historyEntry","completions","push","completeHabit","prevXp","newXp","prevLevel","catch","err","error","addNote","note","updatedNotes","notes","text","toggleTheme","addCustomSuggestedHabit","habitName","trim","prev","category","frequency","removeCustomSuggestedHabit","index","_","logOut","logout","onClick","path","element","ref","earnedBadges"],"sources":["D:/Fully Updated Projects/CLI Test/habit-tracker/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Routes, Route, Navigate, useNavigate } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport HabitList from './components/HabitList';\nimport AddHabitForm from './components/AddHabitForm';\nimport Analytics from './components/Analytics';\nimport Dashboard from './components/Dashboard';\nimport MotivationalQuote from './components/MotivationalQuote';\nimport LevelDisplay from './components/LevelDisplay';\nimport ShareProgress from './components/ShareProgress';\nimport HabitSuggestions from './components/HabitSuggestions';\nimport DataManagement from './components/DataManagement';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Navbar from './components/Navbar';\nimport HomePage from './components/HomePage';\nimport authService from './services/authService';\nimport habitService from './services/habitService';\n\nconst PrivateRoute = ({ children }) => {\n  const user = authService.getCurrentUser();\n  return user ? children : <Navigate to=\"/login\" />;\n};\n\nconst App = () => {\n  const navigate = useNavigate();\n  const [habits, setHabits] = useState([]);\n  const [categories] = useState([\n    { id: 1, name: 'Health', color: '#28a745' }, // Green\n    { id: 2, name: 'Work', color: '#007bff' },   // Blue\n    { id: 3, name: 'Personal', color: '#ffc107' }, // Yellow\n    { id: 4, name: 'Skill Development', color: '#fd7e14' }, // Orange\n    { id: 5, name: 'Uncategorized', color: '#6c757d' }, // Gray\n  ]);\n  const [theme, setTheme] = useState('light');\n  const [activeTab, setActiveTab] = useState('habits');\n  const [layout, setLayout] = useState('default');\n  const [isLayoutDropdownOpen, setIsLayoutDropdownOpen] = useState(false);\n  const layoutDropdownRef = useRef(null);\n  const [level, setLevel] = useState(1);\n  const [xp, setXp] = useState(0);\n  const [customSuggestedHabits, setCustomSuggestedHabits] = useState([]);\n  const XP_PER_LEVEL = 100;\n  const [currentUser, setCurrentUser] = useState(undefined);\n\n  useEffect(() => {\n    const user = authService.getCurrentUser();\n    if (user) {\n      setCurrentUser(user);\n      habitService.getHabits().then(res => {\n        const habitsWithParsedDates = res.data.map(habit => ({\n          ...habit,\n          history: habit.history.map(entry => ({\n            ...entry,\n            date: new Date(entry.date)\n          }))\n        }));\n        setHabits(habitsWithParsedDates);\n      });\n    }\n  }, []);\n\n\n  const allBadges = [\n    { id: 1, name: 'First Step', description: 'Track your first habit', icon: 'bi bi-award-fill', condition: (habits) => habits.some(habit => habit.history.length > 0) },\n    { id: 2, name: 'Consistent Beginner', description: 'Track a habit for 7 consecutive days', icon: 'bi bi-star-fill', condition: (habits) => habits.some(habit => {\n        if (habit.history.length < 7) return false;\n        let streak = 0;\n        let lastDate = null;\n        for (let i = habit.history.length - 1; i >= 0; i--) {\n          const currentDate = new Date(habit.history[i].date);\n          currentDate.setHours(0, 0, 0, 0);\n          if (lastDate && (lastDate.getTime() - currentDate.getTime()) / (1000 * 60 * 60 * 24) === 1) {\n            streak++;\n          } else if (!lastDate || (lastDate.getTime() - currentDate.getTime()) / (1000 * 60 * 60 * 24) > 1) {\n            streak = 1;\n          }\n          lastDate = currentDate;\n          if (streak >= 7) return true;\n        }\n        return false;\n      })\n    },\n    { id: 3, name: 'Habit Master', description: 'Track 5 different habits', icon: 'bi bi-trophy-fill', condition: (habits) => habits.filter(habit => habit.history.length > 0).length >= 5 },\n  ];\n\n  const calculateEarnedBadges = (habits) => {\n    return allBadges.filter(badge => badge.condition(habits));\n  };\n\n  const setReminder = useCallback((id, time) => {\n    const habitToUpdate = habits.find(h => h._id === id);\n    if (habitToUpdate) {\n      habitService.updateHabit(id, { ...habitToUpdate, reminderTime: time }).then(res => {\n        setHabits(prevHabits =>\n          prevHabits.map((habit) =>\n            habit._id === id\n              ? { ...habit, reminderTime: time }\n              : habit\n          )\n        );\n      });\n    }\n  }, [habits]);\n\n  useEffect(() => {\n    const storedTheme = localStorage.getItem('theme');\n    if (storedTheme) {\n      setTheme(storedTheme);\n    }\n    const storedLevel = parseInt(localStorage.getItem('level')) || 1;\n    const storedXp = parseInt(localStorage.getItem('xp')) || 0;\n    setLevel(storedLevel);\n    setXp(storedXp);\n\n    const storedCustomSuggestions = JSON.parse(localStorage.getItem('customSuggestedHabits'));\n    if (storedCustomSuggestions) {\n      setCustomSuggestedHabits(storedCustomSuggestions);\n    }\n\n    if (!('Notification' in window)) {\n      console.log(\"This browser does not support desktop notification\");\n    } else if (Notification.permission === \"default\") {\n      Notification.requestPermission();\n    }\n\n    const handleClickOutside = (event) => {\n      if (layoutDropdownRef.current && !layoutDropdownRef.current.contains(event.target)) {\n        setIsLayoutDropdownOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('theme', theme);\n    localStorage.setItem('level', level);\n    localStorage.setItem('xp', xp);\n    localStorage.setItem('customSuggestedHabits', JSON.stringify(customSuggestedHabits));\n    document.body.className = theme === 'dark' ? 'bg-dark text-white' : '';\n\n    // Clear existing reminders\n    habits.forEach(habit => {\n      if (habit.reminderTimeoutId) {\n        clearTimeout(habit.reminderTimeoutId);\n      }\n    });\n\n    // Schedule new reminders\n    habits.forEach(habit => {\n      if (habit.reminderTime) {\n        const [hours, minutes] = habit.reminderTime.split(':').map(Number);\n        const now = new Date();\n        const reminderDate = new Date();\n        reminderDate.setHours(hours, minutes, 0, 0);\n\n        if (reminderDate.getTime() < now.getTime()) {\n          reminderDate.setDate(reminderDate.getDate() + 1);\n        }\n\n        const delay = reminderDate.getTime() - now.getTime();\n\n        if (delay > 0) {\n          const timeoutId = setTimeout(() => {\n            if (Notification.permission === \"granted\") {\n              const notification = new Notification('Habit Reminder', {\n                body: `Time to ${habit.name}!`, \n                icon: '/logo192.png',\n                data: { habitId: habit._id, reminderTime: habit.reminderTime }\n              });\n\n              notification.onclick = () => {\n                window.focus();\n              };\n\n              notification.onclose = (event) => {\n                if (event.isTrusted) {\n                  const snoozedTime = new Date(now.getTime() + 10 * 60 * 1000);\n                  const snoozedHours = snoozedTime.getHours().toString().padStart(2, '0');\n                  const snoozedMinutes = snoozedTime.getMinutes().toString().padStart(2, '0');\n                  setReminder(habit._id, `${snoozedHours}:${snoozedMinutes}`);\n                }\n              };\n            }\n          }, delay);\n\n          setHabits(prevHabits => prevHabits.map(h => \n            h._id === habit._id ? { ...h, reminderTimeoutId: timeoutId } : h\n          ));\n        }\n      }\n    });\n  }, [habits, theme, level, xp, customSuggestedHabits, setReminder]);\n\n  const addHabit = (habit) => {\n    habitService.addHabit(habit).then(res => {\n      setHabits([...habits, res.data]);\n    });\n  };\n\n  const deleteHabit = (id) => {\n    habitService.deleteHabit(id).then(() => {\n      setHabits(habits.filter((habit) => habit._id !== id));\n    });\n  };\n\n  const trackHabit = (id) => {\n    const today = new Date().toISOString().slice(0, 10);\n    const habitsCopy = JSON.parse(JSON.stringify(habits));\n    const habitToUpdate = habitsCopy.find(h => h._id === id);\n\n    if (habitToUpdate) {\n      const historyEntry = habitToUpdate.history.find(entry => entry.date === today);\n\n      if (historyEntry) {\n        historyEntry.completions += 1;\n      } else {\n        habitToUpdate.history.push({ date: today, completions: 1 });\n      }\n\n      setHabits(habitsCopy);\n\n      habitService.completeHabit(id).then(res => {\n        // The backend has been updated. We can optionally update the state again\n        // with the response from the server, but the optimistic update should suffice.\n        setXp(prevXp => {\n          const newXp = prevXp + 10;\n          if (newXp >= XP_PER_LEVEL) {\n            setLevel(prevLevel => prevLevel + 1);\n            return newXp - XP_PER_LEVEL;\n          }\n          return newXp;\n        });\n      }).catch(err => {\n        // If the API call fails, revert the changes\n        console.error(\"Failed to update habit\", err);\n        setHabits(habits);\n      });\n    }\n  };\n\n  const addNote = (id, note) => {\n    const habitToUpdate = habits.find(h => h._id === id);\n    if (habitToUpdate) {\n      const updatedNotes = [...habitToUpdate.notes, { id: Date.now(), text: note }];\n      habitService.updateHabit(id, { ...habitToUpdate, notes: updatedNotes }).then(res => {\n        setHabits(\n          habits.map((habit) =>\n            habit._id === id\n              ? { ...habit, notes: updatedNotes }\n              : habit\n          )\n        );\n      });\n    }\n  };\n\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n\n  const addCustomSuggestedHabit = (habitName) => {\n    if (habitName.trim() !== '') {\n      setCustomSuggestedHabits(prev => [...prev, { name: habitName.trim(), category: 'Uncategorized', frequency: 'daily' }]);\n    }\n  };\n\n  const removeCustomSuggestedHabit = (index) => {\n    setCustomSuggestedHabits(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const logOut = () => {\n    authService.logout();\n    setCurrentUser(undefined);\n    setHabits([]);\n    navigate('/');\n  };\n\n  return (\n      <div className={`container-fluid py-4 ${theme === 'dark' ? 'bg-dark text-white' : 'bg-light text-dark'}`}>\n        <Navbar currentUser={currentUser} logOut={logOut} />\n        <div className=\"d-flex justify-content-end align-items-center mb-4 px-3\">\n          <button className=\"btn btn-outline-secondary\" onClick={toggleTheme}>\n            <i className={`bi bi-${theme === 'light' ? 'moon' : 'sun'}`}></i>\n          </button>\n        </div>\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/login\" element={<Login setCurrentUser={setCurrentUser} />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route\n            path=\"/tracker\"\n            element={\n              <PrivateRoute>\n                <MotivationalQuote />\n\n                <ul className=\"nav nav-pills nav-fill mb-4\">\n                  <li className=\"nav-item\">\n                    <button\n                      className={`nav-link ${activeTab === 'habits' ? 'active' : ''}`}\n                      onClick={() => setActiveTab('habits')}\n                    >\n                      Habits\n                    </button>\n                  </li>\n                  <li className=\"nav-item\">\n                    <button\n                      className={`nav-link ${activeTab === 'analytics' ? 'active' : ''}`}\n                      onClick={() => setActiveTab('analytics')}\n                    >\n                      Analytics\n                    </button>\n                  </li>\n                  <li className=\"nav-item\">\n                    <button\n                      className={`nav-link ${activeTab === 'dashboard' ? 'active' : ''}`}\n                      onClick={() => setActiveTab('dashboard')}\n                    >\n                      Dashboard\n                    </button>\n                  </li>\n                  <li className=\"nav-item dropdown\" ref={layoutDropdownRef}>\n                    <button\n                      className=\"nav-link dropdown-toggle\"\n                      onClick={() => setIsLayoutDropdownOpen(!isLayoutDropdownOpen)}\n                      aria-expanded={isLayoutDropdownOpen}\n                    >\n                      Layout\n                    </button>\n                    <ul className={`dropdown-menu ${isLayoutDropdownOpen ? 'show' : ''}`}>\n                      <li>\n                        <button className=\"dropdown-item\" onClick={() => {\n                          setLayout('default');\n                          setIsLayoutDropdownOpen(false);\n                        }}>\n                          Default\n                        </button>\n                      </li>\n                      <li>\n                        <button className=\"dropdown-item\" onClick={() => {\n                          setLayout('analytics-first');\n                          setIsLayoutDropdownOpen(false);\n                        }}>\n                          Analytics First\n                        </button>\n                      </li>\n                      <li>\n                        <button className=\"dropdown-item\" onClick={() => {\n                          setLayout('full-width-habits');\n                          setIsLayoutDropdownOpen(false);\n                        }}>\n                          Full Width Habits\n                        </button>\n                      </li>\n                    </ul>\n                  </li>\n                  <li className=\"nav-item\">\n                    <button\n                      className={`nav-link ${activeTab === 'data' ? 'active' : ''}`}\n                      onClick={() => setActiveTab('data')}\n                    >\n                      Data\n                    </button>\n                  </li>\n                </ul>\n\n                {activeTab === 'habits' && (\n                  <>\n                    <AddHabitForm addHabit={addHabit} categories={categories} customSuggestedHabits={customSuggestedHabits} />\n                    <HabitSuggestions habits={habits} addHabit={addHabit} categories={categories} customSuggestedHabits={customSuggestedHabits} />\n                    <HabitList\n                      habits={habits}\n                      deleteHabit={deleteHabit}\n                      trackHabit={trackHabit}\n                      addNote={addNote}\n                      categories={categories}\n                      setReminder={setReminder}\n                    />\n                  </>\n                )}\n\n                {activeTab === 'analytics' && (\n                  <>\n                    <Analytics habits={habits} categories={categories} earnedBadges={calculateEarnedBadges(habits)} />\n                    <LevelDisplay level={level} xp={xp} XP_PER_LEVEL={XP_PER_LEVEL} />\n                    <ShareProgress habits={habits} level={level} />\n                  </>\n                )}\n\n                {activeTab === 'dashboard' && (\n                  <Dashboard\n                    habits={habits}\n                    categories={categories}\n                    deleteHabit={deleteHabit}\n                    trackHabit={trackHabit}\n                    addNote={addNote}\n                    layout={layout}\n                  />\n                )}\n\n                {activeTab === 'data' && (\n                  <DataManagement\n                    habits={habits}\n                    categories={categories}\n                    setHabits={setHabits}\n                    customSuggestedHabits={customSuggestedHabits}\n                    addCustomSuggestedHabit={addCustomSuggestedHabit}\n                    removeCustomSuggestedHabit={removeCustomSuggestedHabit}\n                  />\n                )}\n              </PrivateRoute>\n            }\n          />\n        </Routes>\n      </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}